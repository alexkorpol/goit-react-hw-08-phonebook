{"version":3,"file":"static/js/91.5c93fe49.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Forma/Forma.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Wrapper/Wrapper.styled.jsx","components/Wrapper/Title.jsx","pages/Contacts.jsx"],"sourcesContent":["export const selectFilter = state => state.filter;\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = state => {\n  const contacts = selectContacts(state);\n  const filter = selectFilter(state);\n  const filterToLowerCase = filter.toLowerCase();\n  return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterToLowerCase)\n  );\n};\n","import { useState} from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { Button, Form, Input, Label, Span } from './Forma.styled';\nimport { Notify } from 'notiflix';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/services-API';\n\n\nexport default function Forma() {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  const INITIAL_STATE = {\n    nameNew: '',\n    numberNew: '',\n  };\n\n  const [state, setState] = useState({\n    ...INITIAL_STATE,\n  });\n\n  const { nameNew, numberNew } = state;\n\n\n  const handleChange = nameValueInput => event => {\n    const { target } = event;\n    setState(prevState => ({ ...prevState, [nameValueInput]: target.value }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // ! ====== Add contact to state ======\n    const newNameToLowerCase = nameNew.toLowerCase();\n    const nameAndNumberIsExistIndex = contacts.findIndex(\n      ({ name, number }) =>\n        name.toLowerCase() === newNameToLowerCase && number === numberNew\n    );\n\n    if (nameAndNumberIsExistIndex >= 0) {\n      Notify.failure(\n        `${contacts[nameAndNumberIsExistIndex].name} and number ${contacts[nameAndNumberIsExistIndex].number}   is already in list contacts`\n      );\n      resetForm();\n      return;\n    }\n\n    const numberIsExistIndex = contacts.findIndex(\n      ({ number }) => number === numberNew\n    );\n    if (numberIsExistIndex >= 0) {\n      Notify.failure(\n        `This number ${contacts[numberIsExistIndex].number} is already in list contacts ${contacts[numberIsExistIndex].name}`\n      );\n      resetForm();\n      return;\n    }\n\n    const newContact = {\n      id: nanoid(),\n      name: nameNew,\n      number: numberNew,\n    };\n\n    dispatch(addContact(newContact));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setState({\n      ...INITIAL_STATE,\n    });\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label htmlFor={nanoid()}>\n        <Span>Name</Span>\n      </Label>\n\n      <Input\n        type=\"text\"\n        placeholder=\"Enter name of contact\"\n        name=\"name\"\n        id={nanoid()}\n        value={nameNew}\n        onChange={handleChange('nameNew')}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n\n      <Label htmlFor={nanoid()}>\n        <Span>Number</Span>\n      </Label>\n\n      <Input\n        type=\"tel\"\n        placeholder=\"Enter number of contact\"\n        name=\"number\"\n        id={nanoid()}\n        value={numberNew}\n        onChange={handleChange('numberNew')}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n}\n\n","import styled from \"styled-components\"\n\nexport const FormFilter = styled.form`\ndisplay: flex;\njustify-content: center;\n`\nexport const Label = styled.label`\ncolor: #000;\n`\nexport const Input = styled.input``\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { setStatusFilter } from 'redux/contacts/filterSlice';\nimport { FormFilter, Label } from './Filter.styled';\nimport { Input } from 'components/Forma/Forma.styled';\n\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const valueInputFilter = event => {\n    dispatch(setStatusFilter(event.target.value));\n  };\n\n  return (\n    <FormFilter>\n      <Label>\n        <Input\n          type=\"name\"\n          value={value}\n          onChange={valueInputFilter}\n          placeholder=\"Please enter a name to search\"\n        />\n      </Label>\n    </FormFilter>\n  );\n};\n\nexport default Filter;\n","import styled from \"styled-components\"\n\nexport const Item = styled.li`\n   height: 50px;\n   display: flex;\n   align-items: center;\n   margin: 10px;\n   gap: 50px;\n   color: blue;\n   font-style: italic;\n   font-weight: 700;\n  `\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  `\n\n","import React from 'react';\nimport { Item, List } from './Contacts.styled';\nimport { Button, Span } from 'components/Forma/Forma.styled';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/services-API';\n\n\nconst ContactsAll = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n  return (\n    <List>\n      {contacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name + ' : ' + number}\n          <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n            <Span>Delete</Span>\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default ContactsAll;\n","import styled from \"styled-components\"\n\nexport const Container = styled.div`\n    padding: 40px;\n    width: 500px;\n    margin: 0 auto;\n`\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-shadow: 2px 2px 20px #433c3c, 5px 5px 5px #000000;\n`\n","import PropTypes from 'prop-types';\nimport { Title } from './Wrapper.styled';\n\nconst GlobalTitle = ({title}) => {\n  return (\n    <Title >{title}</Title>\n  );\n}\n\nGlobalTitle.propTypes = {\n  title: PropTypes.string.isRequired\n}\n\nexport default GlobalTitle;\n","import { HelmetProvider } from 'react-helmet-async';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Forma from 'components/Forma/Forma';\nimport Filter from 'components/Filter/Filter';\nimport ContactsAll from 'components/Contacts/Contacts';\nimport GlobalTitle from 'components/Wrapper/Title';\nimport { fetchContacts } from 'redux/contacts/services-API';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      <HelmetProvider>\n        <GlobalTitle title=\"Phonebook\" />\n        <Forma />\n        <GlobalTitle title=\"Contacts\" />\n        <Filter />\n        <ContactsAll />\n      </HelmetProvider>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectFilter","state","filter","selectVisibleContacts","contacts","items","selectContacts","filterToLowerCase","toLowerCase","contact","name","includes","Forma","useSelector","dispatch","useDispatch","INITIAL_STATE","nameNew","numberNew","useState","setState","handleChange","nameValueInput","event","target","prevState","value","resetForm","onSubmit","e","preventDefault","newNameToLowerCase","nameAndNumberIsExistIndex","findIndex","number","Notify","numberIsExistIndex","newContact","id","nanoid","addContact","htmlFor","type","placeholder","onChange","pattern","title","required","FormFilter","styled","Label","setStatusFilter","Item","List","map","onClick","deleteContact","Title","useEffect","fetchContacts"],"sourceRoot":""}